#!/usr/bin/env python3.6

from functions import *

import numpy as np

import argparse
import json
import sys

parserdescription = 'Arguments for k, training set, and test set'

parser = argparse.ArgumentParser(
                                 description=parserdescription
                                 )

parser.add_argument(
                    'k',
                    type=int,
                    help='k parameter'
                    )

parser.add_argument(
                    'train',
                    type=str,
                    help='Path to training set'
                    )

parser.add_argument(
                    'test',
                    type=str,
                    help='Path to test set'
                    )

args = parser.parse_args()


# Then number of k-nearest neighbors
k = args.k

# Open the training and test data
train = open(args.train)
test = open(args.test)

# Load the data in opened files
# The target feature is the lsat feature named 'label'
train = json.load(train)
test = json.load(test)

train_data, train_classes = datasplitter(train['data'])
test_data, test_classes = datasplitter(test['data'])

train_norm = autonorm(train_data)
test_norm = autonorm(test_data)

# The data types
train_types = [i[-1] for i in train['metadata']['features'][:-1]]
test_types = [i[-1] for i in test['metadata']['features'][:-1]]

if train_types != test_types:
    print('Inconsistent data types for features')

# Use the k-nearest neighbors alorithm
results = knn(train_norm, train_classes, test_norm, k, train_types)
results = np.array(results)  # Convert to print on screen

# Print the data in standard output
np.savetxt(sys.stdout.buffer, results, delimiter=',', fmt='%s')
